apiVersion: v1
kind: Service
metadata:
  name: espresso-shop-product-catalog-svc
spec:
  type: ClusterIP
  selector:
    app: espresso-shop
    version: v1
  ports:
    - port: 8090
      targetPort: 80

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shop-product
  labels:
    app: espresso-shop
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: espresso-shop
      version: v1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: espresso-shop
        version: v1
    spec:
      securityContext:  # Apply security context at the pod level
        runAsNonRoot: true
        runAsUser: 1000  # UID of an unprivileged user
      containers:
      - name: espresso-shop
        image: s5carles/espressoweb:v1.0  # Updated image name and tag
        ports:
        - containerPort: 80
        # Commented out environment variables
        # env:
        # - name: ProductCatalogUrl
        #   value: "http://espresso-shop-product-catalog-svc:8091"
        # - name: ReviewsUrl
        #   value: "http://espresso-shop-reviews-svc:8092"
        # Commented out probes
        # livenessProbe:
        #   httpGet:
        #     path: /healthz
        #     port: 80
        #   initialDelaySeconds: 30
        #   periodSeconds: 10
        # readinessProbe:
        #   httpGet:
        #     path: /healthz
        #     port: 80
        #   initialDelaySeconds: 5
        #   periodSeconds: 5
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "256Mi" 



apiVersion: apps/v1
kind: Deployment
metadata:
  name: espresso-shop
  labels:
    app: espresso-shop
spec:
  replicas: 3
  selector:
    matchLabels:
      app: espresso-shop
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: espresso-shop
    spec:
      securityContext:  # Apply security context at the pod level
        runAsNonRoot: true
        runAsUser: 1000  # UID of an unprivileged user
      containers:
      - name: espresso-shop
        image: s5carles/espressoweb:v1.0  # Updated image name and tag
        ports:
        - containerPort: 80
        env:
        - name: ProductCatalogUrl
          value: "http://espresso-shop-product-catalog-svc:8091"
        - name: ReviewsUrl
          value: "http://espresso-shop-reviews-svc:8092"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "256Mi"
      # imagePullSecrets:
      # - name: your-secret  # Use the newly created image pull secret

---
apiVersion: v1
kind: Service
metadata:
  name: espresso-shop-service
spec:
  type: NodePort
  selector:
    app: espresso-shop
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30000  # Specify the desired NodePort number